openapi: 3.0.2
servers:
  - url: /api
info:
  description: |-
    This is a simple API for use in the examples
  version: 1.0.0-SNAPSHOT
  title: Simple API example
  license:
    name: Apache 2.0
    url: 'http://www.apache.org/licenses/LICENSE-2.0.html'
tags:
  - name: user
    description: Operations about user
  - name: group
    description: Operations about groups
paths:
  /user:
    post:
      tags:
        - user
      summary: Add a new user
      description: Add a user
      operationId: addUser
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
      requestBody:
        description: Create a new user
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User'
  '/user/{userId}':
    get:
      tags:
        - user
      summary: Find user by ID
      description: Returns a single user
      operationId: getUserById
      parameters:
        - name: userId
          in: path
          description: ID of user to return
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
        '400':
          description: Invalid ID supplied
        '404':
          description: User not found
  /group:
    post:
      tags:
        - group
      summary: Create a new group
      description: Create a new user group
      operationId: createGroup
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Group'
      requestBody:
        description: Create a new group
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Group'
  '/group/{groupId}':
    get:
      tags:
        - group
      summary: Find group by ID
      description: Returns a single group
      operationId: getGroupById
      parameters:
        - name: groupId
          in: path
          description: ID of group to return
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Group'
        '400':
          description: Invalid ID supplied
        '404':
          description: Group not found
components:
  schemas:
    User:
      type: object
      properties:
        id:
          type: integer
          format: int64
          example: 10
        username:
          type: string
          example: theUser
        firstName:
          type: string
          example: John
        lastName:
          type: string
          example: James
        email:
          type: string
          example: john@email.com
    Group:
      type: object
      properties:
        id:
          type: integer
          format: int64
          example: 10
        name:
          type: string
          example: some_group_name
        users:
          type: array
          items:
            type: object
            $ref: '#/components/schemas/User'
